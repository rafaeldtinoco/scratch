Example of a MIR checklist:

[Availability]

TODO: The package must already be in the Ubuntu universe, and must build for the architectures it is designed to work on.

TODO: mention which binaries we actually want (if the package builds more than one).  Check the dependency-tree.txt file which binary we actually need vs the debian/control file in the source

[Rationale]

TODO: check if this code (or older versions of it) was part of mailman2 already - if it was leave here: This code was formerly part of mailman2 which is in main, but was split into an extra package and evolved from there on its own)

[Security]

TODO: check the security History of the package
- http://people.ubuntu.com/~ubuntu-security/cve/universe.html
- http://cve.mitre.org/cve/cve.html

[Quality assurance]

The mailman3 stacks as of now (Disco) installs fine and provides a base
config. But due to the nature of the package that needs further modification
to be of real use.

TODO: The package must not ask debconf questions higher than medium if it is going to be installed by default. The debconf questions must have reasonable defaults.

TODO: There are no long-term outstanding bugs which affect the usability of the program to a major degree. To support a package, we must be reasonably convinced that upstream supports and cares for the package.

TODO: The status of important bugs in Debian's, Ubuntu's, and upstream's bug tracking systems must be evaluated. Important bugs must be pointed out and discussed in the MIR report.

TODO: The package is maintained well in Debian/Ubuntu (check out the Debian PTS)

TODO: The package should not deal with exotic hardware which we cannot support.

TODO: If the package ships a test suite, and there is no obvious reason why it cannot work during build (e. g. it needs root privileges or network access), it should be run during package build, and a failing test suite should fail the build.

TODO: The package uses a debian/watch file whenever possible. In cases where this is not possible (e. g. native packages), the package should either provide a debian/README.source file or a debian/watch file (with comments only) providing clear instructions on how to generate the source tar file.

TODO: It is often useful to run lintian --pedantic on the package to spot the most common packaging issues in advance

TODO: The package should not rely on obsolete or about to be demoted packages. That currently includes package dependencies on Python2 (without providing Python3 packages), and packages depending on GTK2.

[UI standards]

TODO: End-user applications must be internationalized (translatable), using the standard intltool/gettext build and runtime system and produce a proper PO template during build.

TODO: End-user applications must ship a standard conformant desktop file.

[Dependencies]

Some dependencies are not in main, but we drive MIR for all related packages
that are not in main at the same time.

Please check the list of bugs from the main Mailman3 MIR to get an overview.

[Standards compliance]

TODO: The package should meet the FHS and Debian Policy standards.

TODO: Major violations should be documented and justified.

TODO: Also, the source packaging should be reasonably easy to understand and maintain.

[Maintenance]

The Server team will subscribe for the package for maintenance

[Background]

TODO: The package descriptions should explain the general purpose and context of the package. Additional explanations/justifications should be done in the MIR report.
